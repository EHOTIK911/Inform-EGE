'''
Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
F(n) = n*n + 5*n + 4, при n > 30
F(n) = F(n+1) + 3*F(n+4), при чётных n ≤ 30
F(n) = 2*F(n+2) + F(n+5), при нечётных n ≤ 30
Определите количество натуральных значений n из отрезка [1; 1000], для которых сумма цифр значения F(n) равна 27.
'''

def F(n):
    if n > 30:
        return n*n+ 5*n + 4
    if (n <=30) and (n % 2 == 0):
        return F(n+1) + 3*F(n+4)
    if (n <=30) and (n % 2 != 0):
        return 2*F(n+2) + F(n+5)

for n in range(1,1001):
    print(F(n))
    if F(n) < 10000:
        a = F(n) % 10
        b = (F(n) // 10) % 10
        c = (F(n) //100) % 10
        d =  (F(n) // 1000) % 10
        sum = (a + b + c + d)
    elif F(n) >= 10000 and F(n) < 100000:
        a = F(n) % 10
        b = (F(n) // 10) % 10
        c = (F(n)//100) % 10
        d =  (F(n) // 1000) % 10
        e = (F(n)//10000) % 10
        sum = (a + b + c + d + e)
    elif F(n) >= 100000 and F(n) < 1000000:
        a = F(n) % 10
        b = (F(n) // 10) % 10
        c = (F(n)//100) % 10
        d =  (F(n) // 1000) % 10
        e = (F(n) // 10000) % 10
        f = (F(n)//100000) % 10
        sum = (a + b + c + d + e + f)
    elif F(n) >= 1000000 and F(n) < 10000000:
        a = F(n) % 10
        b = (F(n) // 10) % 10
        c = (F(n)//100) % 10
        d =  (F(n) // 1000) % 10
        e = (F(n) // 10000) % 10
        f = (F(n)//100000) % 10
        j = (F(n)//1000000) % 10
        sum = (a + b + c + d + e + f + j)
    if sum == 27:
        print(n)
